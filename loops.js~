/**
 *
 *
 *
 *
 *
 *
 */

function mergeSorter(arr) {
  // sort 2 arrays into 1
  const sorter = (arr1, arr2, sorted = []) => {
    if (arr1.length === 0 || arr2.length === 0) {
      if (arr1.length === 0) {
        sorted = [...sorted, ...arr2];
      } else if (arr2.length === 0) {
        sorted = [...sorted, ...arr1];
      }
      return sorted;
    } else {
      if (arr1[0] <= arr2[0]) {
        sorted.push(arr1[0]);
        arr1.shift();
      }
      if (arr1[0] > arr2[0]) {
        sorted.push(arr2[0]);
        arr2.shift();
      }
      return sorter(arr1, arr2, sorted);
    }
  };

  const mergeSort = (arr) => {
    if (arr.length <= 2) {
      return arr.sort((a, b) => a - b);
    } else {
      return sorter(
        mergeSort(arr.slice(0, Math.floor(arr.length / 2))),
        mergeSort(arr.slice(Math.floor(arr.length / 2)))
      );
    }
  };

  return mergeSort(arr);
}

class HighScores {
  constructor(list) {
    this.list = list
  }

  get scores() {
    return this.list
  }

  get latest() {
    return this.list[this.list.length-1]
  }

  get personalBest() {
    let max = -Infinity
    for (let i = 0; i < this.list.length; i++) {
      if (this.list[i] > max) {
        max = this.list[i]
      }
    }
    return max
  }

  get personalTopThree() {
    let copy = [...this.list]
    let sorted = mergeSorter(copy)
    let final = sorted.reverse()
    return final.slice(0, 3) 
  }
}

